@model List<NewsArticle>
@{
    ViewData["Title"] = "News Articles Management";
    var canManage = ViewBag.CanManage as bool? ?? false;
    var isMyArticles = ViewBag.IsMyArticles as bool? ?? false;
    var categories = ViewBag.Categories as List<Category> ?? new List<Category>();
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2>
                <i class="fas fa-newspaper me-2"></i>
                @if (isMyArticles)
                {
                    <text>My News Articles</text>
                }
                else
                {
                    <text>News Articles Management</text>
                }
            </h2>
            <p class="text-muted mb-0">Manage news articles and content</p>
        </div>
        <div>
            @if (canManage)
            {
                <button type="button" class="btn btn-primary me-2" id="createBtn">
                    <i class="fas fa-plus me-1"></i>
                    Create Article
                </button>
            }
            @if (!isMyArticles && canManage)
            {
                <a asp-action="Index" asp-route-filter="my-articles" class="btn btn-outline-info">
                    <i class="fas fa-user me-1"></i>
                    My Articles
                </a>
            }
            @if (isMyArticles)
            {
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-list me-1"></i>
                    All Articles
                </a>
            }
        </div>
    </div>

    <!-- Search and Filter Controls -->
    <form asp-action="Index" method="get" class="mb-3 d-flex">
        <input type="hidden" name="filter" value="@ViewBag.Filter" />
        <input type="text" name="searchTerm" class="form-control me-2" placeholder="Search articles..."
               value="@ViewBag.SearchTerm" style="max-width: 300px;" />
        <select name="categoryId" class="form-select me-2" style="max-width: 200px;">
            <option value="">All Categories</option>
            @foreach (var category in categories.Where(c => c.IsActive == true))
            {
                <option value="@category.CategoryId"
                        selected="@(ViewBag.CategoryId?.ToString() == category.CategoryId.ToString())">
                    @category.CategoryName
                </option>
            }
        </select>
        <button type="submit" class="btn btn-primary me-2">
            <i class="fas fa-search"></i> Search
        </button>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-times"></i> Clear
        </a>
    </form>

    <!-- Articles Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="fas fa-list me-2"></i>
                Articles List (@Model.Count items)
            </h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="articlesTable">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Title</th>
                                <th>Headline</th>
                                <th>Category</th>
                                <th>Author</th>
                                <th>Created Date</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var article in Model)
                            {
                                <tr>
                                    <td class="font-monospace">@article.NewsArticleId</td>
                                    <td>
                                        <div class="text-truncate" style="max-width: 200px;" title="@article.NewsTitle">
                                            <strong>@article.NewsTitle</strong>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="text-truncate" style="max-width: 250px;" title="@article.Headline">
                                            @article.Headline
                                        </div>
                                    </td>
                                    <td>
                                        @if (article.Category != null)
                                        {
                                            <span class="badge bg-info">@article.Category.CategoryName</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No Category</span>
                                        }
                                    </td>
                                    <td>@(article.CreatedBy?.AccountName ?? "Unknown")</td>
                                    <td>@article.CreatedDate?.ToString("MMM dd, yyyy")</td>
                                    <td>
                                        @if (article.NewsStatus == true)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-sm btn-outline-info open-detail-modal"
                                                    data-url="@Url.Action("Details", new { id = article.NewsArticleId })"
                                                    title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            @if (canManage)
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-warning open-modal"
                                                        data-url="@Url.Action("Edit", new { id = article.NewsArticleId })"
                                                        title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-outline-danger btn-delete"
                                                        data-id="@article.NewsArticleId" data-name="@article.NewsTitle"
                                                        title="Delete">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center text-muted py-5">
                    <i class="fas fa-newspaper fa-3x mb-3"></i>
                    <h5>No News Articles Found</h5>
                    @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                    {
                        <p>No articles match your search criteria. <a asp-action="Index">Show all articles</a></p>
                    }
                    else if (isMyArticles)
                    {
                        <p>You haven't created any articles yet. <button type="button" class="btn btn-link p-0" id="createBtnEmpty">Create your first article</button></p>
                    }
                    else
                    {
                        <p>No news articles have been created yet.</p>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailModal" tabindex="-1" role="dialog" aria-labelledby="detailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailModalLabel">Article Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="detailModalBody">
                <!-- Article details loads here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Article Modal for Create/Edit -->
<div class="modal fade" id="articleModal" tabindex="-1" role="dialog" aria-labelledby="articleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="articleModalLabel">Article</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalBody">
                <!-- Partial view loads here -->
            </div>
            <div class="modal-footer">
                <button type="submit" form="articleForm" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Warning!</strong> This action cannot be undone.
                </div>
                Are you sure you want to delete <strong id="deleteArticleName"></strong>?
                <input type="hidden" id="deleteArticleId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteBtn" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            if ($('#articlesTable').length > 0) {
                $('#articlesTable').DataTable({
                    "order": [[ 5, "desc" ]], // Sort by created date descending
                    "pageLength": 25,
                    "responsive": true,
                    "language": {
                        "search": "Search articles:",
                        "lengthMenu": "Show _MENU_ articles per page",
                        "info": "Showing _START_ to _END_ of _TOTAL_ articles"
                    }
                });
            }

            // Check if there's an articleId parameter in URL to auto-open details
            const urlParams = new URLSearchParams(window.location.search);
            const articleId = urlParams.get('articleId');
            if (articleId) {
                // Auto-open the article details modal
                $.get('@Url.Action("Details")/' + articleId, function (data) {
                    $('#detailModalBody').html(data);
                    $('#detailModal').modal('show');
                }).fail(function() {
                    showAlert('warning', 'Article not found or not accessible.');
                });

                // Clean up URL without reloading
                const newUrl = window.location.pathname;
                window.history.replaceState({}, document.title, newUrl);
            }

            // Open Details modal
            $(document).on('click', '.open-detail-modal', function () {
                const url = $(this).data('url');
                $.get(url, function (data) {
                    $('#detailModalBody').html(data);
                    $('#detailModal').modal('show');
                });
            });

            // Open Create modal
            $('#createBtn, #createBtnEmpty').click(function () {
                $.get('@Url.Action("Create")', function (data) {
                    $('#modalBody').html(data);
                    $('#articleModal').modal('show');
                });
            });

            // Open Edit modal
            $(document).on('click', '.open-modal', function () {
                const url = $(this).data('url');
                showLoading();

                $.get(url, function (data) {
                    $('#modalBody').html(data);
                    $('#articleModalLabel').text('Edit Article');
                    $('#articleModal').modal('show');
                    hideLoading();
                }).fail(function(xhr, status, error) {
                    hideLoading();
                    let errorMessage = 'Failed to load article for editing.';
                    if (xhr.responseText) {
                        errorMessage = xhr.responseText;
                    }
                    showAlert('danger', errorMessage);
                });
            });

            // Handle delete button click
            $(document).on('click', '.btn-delete', function () {
                const articleId = $(this).data('id');
                const articleName = $(this).data('name');
                $('#deleteArticleId').val(articleId);
                $('#deleteArticleName').text(articleName);
                const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
                modal.show();
            });

            // Handle confirm delete
            $('#confirmDeleteBtn').click(function () {
                const id = $('#deleteArticleId').val();
                $.ajax({
                    url: '/NewsArticle/DeleteConfirmed/' + id,
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#deleteModal').modal('hide');
                            showAlert('success', 'Article deleted successfully!');
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            showAlert('danger', response.message || "Delete failed.");
                        }
                    },
                    error: function () {
                        showAlert('danger', "Error deleting article.");
                    }
                });
            });

            // Handle form submission inside modal (Create/Edit)
            $(document).on('submit', '#articleForm', function (e) {
                e.preventDefault();
                var form = $(this);
                showLoading();

                $.ajax({
                    type: form.attr('method'),
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function (response) {
                        hideLoading();
                        if (response.success) {
                            $('#articleModal').modal('hide');
                            showAlert('success', 'Article saved successfully!');
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            $('#modalBody').html(response); // Show validation errors
                        }
                    },
                    error: function (xhr, status, error) {
                        hideLoading();
                        let errorMessage = 'An error occurred while saving the article.';
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }
                        showAlert('danger', errorMessage);
                    }
                });
            });

        // Add loading functions
        function showLoading() {
            if ($('#loadingSpinner').length === 0) {
                $('body').append('<div id="loadingSpinner" class="position-fixed top-50 start-50 translate-middle" style="z-index: 9999;"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>');
            }
            $('#loadingSpinner').removeClass('d-none');
        }

        function hideLoading() {
            $('#loadingSpinner').addClass('d-none');
        }
        });

        // Utility function to show alerts
        function showAlert(type, message) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            const container = document.querySelector('main');
            container.insertAdjacentHTML('afterbegin', alertHtml);

            setTimeout(() => {
                const alert = container.querySelector('.alert');
                if (alert) {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                }
            }, 5000);
        }
    </script>
}