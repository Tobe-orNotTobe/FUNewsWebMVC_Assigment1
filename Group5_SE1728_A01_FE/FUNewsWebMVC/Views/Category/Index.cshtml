@model List<Category>
@{
    ViewData["Title"] = "Categories Management";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2>
                <i class="fas fa-folder me-2"></i>
                Categories Management
            </h2>
            <p class="text-muted mb-0">Manage news article categories</p>
        </div>
        <div>
            <button type="button" class="btn btn-primary" id="createBtn">
                <i class="fas fa-plus me-1"></i>
                Create Category
            </button>
        </div>
    </div>

    <!-- Search and Filter -->
    <form asp-action="Index" method="get" class="mb-3 d-flex">
        <input type="text" name="searchTerm" class="form-control me-2" placeholder="Search categories..."
               value="@ViewBag.SearchTerm" style="max-width: 300px;" />
        <button type="submit" class="btn btn-primary me-2">
            <i class="fas fa-search"></i> Search
        </button>
        @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
        {
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-times"></i> Clear
            </a>
        }
    </form>

    <!-- Categories Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="fas fa-list me-2"></i>
                Categories List (@Model.Count items)
            </h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="categoriesTable">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Category Name</th>
                                <th>Description</th>
                                <th>Parent Category</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in Model)
                            {
                                <tr>
                                    <td class="font-monospace">@category.CategoryId</td>
                                    <td>
                                        <strong>@category.CategoryName</strong>
                                    </td>
                                    <td>
                                        <div class="text-truncate" style="max-width: 300px;" title="@category.CategoryDesciption">
                                            @(string.IsNullOrEmpty(category.CategoryDesciption) ? "No description" : category.CategoryDesciption)
                                        </div>
                                    </td>
                                    <td>
                                        @if (category.ParentCategory != null)
                                        {
                                            <span class="badge bg-info">@category.ParentCategory.CategoryName</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Root Category</span>
                                        }
                                    </td>
                                    <td>
                                        @if (category.IsActive == true)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-sm btn-outline-warning open-modal"
                                                    data-url="@Url.Action("Edit", new { id = category.CategoryId })"
                                                    title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger btn-delete"
                                                    data-id="@category.CategoryId" data-name="@category.CategoryName"
                                                    title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center text-muted py-5">
                    <i class="fas fa-folder fa-3x mb-3"></i>
                    <h5>No Categories Found</h5>
                    @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                    {
                        <p>No categories match your search criteria. <a asp-action="Index">Show all categories</a></p>
                    }
                    else
                    {
                        <p>No categories have been created yet. <button type="button" class="btn btn-link p-0" id="createBtnEmpty">Create your first category</button></p>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Category Modal for Create/Edit -->
<div class="modal fade" id="categoryModal" tabindex="-1" role="dialog" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryModalLabel">Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalBody">
                <!-- Partial view loads here -->
            </div>
            <div class="modal-footer">
                <button type="submit" form="categoryForm" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Category Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Warning!</strong> This action cannot be undone.
                </div>
                <p>Are you sure you want to delete category <strong id="deleteCategoryName"></strong>?</p>

                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    <strong>Note:</strong> Categories that are being used by news articles cannot be deleted.
                </div>

                <input type="hidden" id="deleteCategoryId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteBtn" class="btn btn-danger">
                    <i class="fas fa-trash me-1"></i>
                    Delete Category
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            if ($('#categoriesTable').length > 0) {
                $('#categoriesTable').DataTable({
                    "order": [[ 1, "asc" ]],
                    "pageLength": 25,
                    "responsive": true,
                    "language": {
                        "search": "Search categories:",
                        "lengthMenu": "Show _MENU_ categories per page",
                        "info": "Showing _START_ to _END_ of _TOTAL_ categories"
                    }
                });
            }

            // Open Create modal
            $('#createBtn, #createBtnEmpty').click(function () {
                showLoading();

                $.get('@Url.Action("Create")', function (data) {
                    $('#modalBody').html(data);
                    $('#categoryModalLabel').text('Create Category');
                    $('#categoryModal').modal('show');
                    hideLoading();
                }).fail(function() {
                    hideLoading();
                    showAlert('danger', 'Failed to load create form.');
                });
            });

            // Open Edit modal
            $(document).on('click', '.open-modal', function () {
                const url = $(this).data('url');
                showLoading();

                $.get(url, function (data) {
                    $('#modalBody').html(data);
                    $('#categoryModalLabel').text('Edit Category');
                    $('#categoryModal').modal('show');
                    hideLoading();
                }).fail(function() {
                    hideLoading();
                    showAlert('danger', 'Failed to load edit form.');
                });
            });

            // Handle delete button click
            $(document).on('click', '.btn-delete', function () {
                const categoryId = $(this).data('id');
                const categoryName = $(this).data('name');
                $('#deleteCategoryId').val(categoryId);
                $('#deleteCategoryName').text(categoryName);
                const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
                modal.show();
            });

            // Handle confirm delete
            $('#confirmDeleteBtn').click(function () {
                const id = $('#deleteCategoryId').val();
                showLoading();

                $.ajax({
                    url: '/Category/DeleteConfirmed/' + id,
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        hideLoading();
                        if (response.success) {
                            $('#deleteModal').modal('hide');
                            showAlert('success', 'Category deleted successfully!');
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            showAlert('danger', response.message || "Delete failed.");
                        }
                    },
                    error: function () {
                        hideLoading();
                        showAlert('danger', "Error deleting category.");
                    }
                });
            });

            // Handle form submission inside modal (Create/Edit)
            $(document).on('submit', '#categoryForm', function (e) {
                e.preventDefault();
                var form = $(this);
                showLoading();

                $.ajax({
                    type: form.attr('method'),
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function (response) {
                        hideLoading();
                        if (response.success) {
                            $('#categoryModal').modal('hide');
                            showAlert('success', 'Category saved successfully!');
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            $('#modalBody').html(response); // Show validation errors
                        }
                    },
                    error: function () {
                        hideLoading();
                        showAlert('danger', 'An error occurred while saving the category.');
                    }
                });
            });
        });

        // Utility functions
        function showLoading() {
            if ($('#loadingSpinner').length === 0) {
                $('body').append('<div id="loadingSpinner" class="position-fixed top-50 start-50 translate-middle" style="z-index: 9999;"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>');
            }
            $('#loadingSpinner').removeClass('d-none');
        }

        function hideLoading() {
            $('#loadingSpinner').addClass('d-none');
        }

        function showAlert(type, message) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            const container = document.querySelector('main');
            container.insertAdjacentHTML('afterbegin', alertHtml);

            setTimeout(() => {
                const alert = container.querySelector('.alert');
                if (alert) {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                }
            }, 5000);
        }
    </script>
}