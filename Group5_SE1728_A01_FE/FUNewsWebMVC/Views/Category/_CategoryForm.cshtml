@model FUNewsWebMVC.Models.Category

@Html.AntiForgeryToken()

<form id="categoryForm" asp-action="@ViewBag.Action" method="post">
    @if (Model.CategoryId != 0)
    {
        <input type="hidden" asp-for="CategoryId" />
    }

    <div class="form-group mb-3">
        <label asp-for="CategoryName" class="form-label">Category Name *</label>
        <input asp-for="CategoryName" class="form-control" maxlength="100" required
               placeholder="Enter category name..." />
        <span asp-validation-for="CategoryName" class="text-danger"></span>
        <div class="form-text">Category names should be descriptive and concise (max 100 characters)</div>
    </div>

    <div class="form-group mb-3">
        <label asp-for="CategoryDesciption" class="form-label">Description *</label>
        <textarea asp-for="CategoryDesciption" class="form-control" rows="3" maxlength="250" required
                  placeholder="Enter category description..."></textarea>
        <span asp-validation-for="CategoryDesciption" class="text-danger"></span>
        <div class="form-text">Brief description of this category (max 250 characters)</div>
    </div>

    <div class="form-group mb-3">
        <label asp-for="ParentCategoryId" class="form-label">Parent Category</label>
        <select asp-for="ParentCategoryId" class="form-select"
                asp-items="ViewBag.ParentCategories">
            <option value="">-- None (Root Category) --</option>
        </select>
        <span asp-validation-for="ParentCategoryId" class="text-danger"></span>
        <div class="form-text">Select a parent category to create a subcategory (optional)</div>
    </div>

    <div class="form-group mb-3">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="IsActive" name="IsActive" value="true" @(Model.IsActive == true ? "checked" : "") />
            <input type="hidden" name="IsActive" value="false" />
            <label class="form-check-label" for="IsActive">
                <strong>Active Category</strong>
            </label>
            <div class="form-text">Check to make this category available for use in news articles</div>
        </div>
    </div>


    @if (Model.CategoryId != 0)
    {
        <!-- Category Metadata for Edit -->
        <div class="row mt-4 pt-3 border-top bg-light rounded p-3">
            <div class="col-md-6">
                <div class="mb-2">
                    <strong>Category ID:</strong>
                    <code>@Model.CategoryId</code>
                </div>
                <div class="mb-2">
                    <strong>Current Status:</strong>
                    @if (Model.IsActive == true)
                    {
                        <span class="badge bg-success">Active</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">Inactive</span>
                    }
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-2">
                    <strong>Type:</strong>
                    @if (Model.ParentCategoryId.HasValue)
                    {
                        <span class="badge bg-info">Subcategory</span>
                    }
                    else
                    {
                        <span class="badge bg-primary">Root Category</span>
                    }
                </div>
                @if (Model.ParentCategory != null)
                {
                    <div class="mb-2">
                        <strong>Parent:</strong>
                        <span class="badge bg-outline-info">@Model.ParentCategory.CategoryName</span>
                    </div>
                }
            </div>
        </div>
    }
</form>

<script>
    // Scoped to modal only - prevent affecting table
    $(document).ready(function() {
        // Character counter for content fields (scoped to modal)
        function addCharacterCounter(selector, maxLength) {
            const element = $('#categoryModal').find(selector);
            if (element.length > 0) {
                const counter = $('<div class="text-muted small mt-1"></div>');
                element.parent().append(counter);

                function updateCounter() {
                    const remaining = maxLength - element.val().length;
                    counter.text(`${remaining} characters remaining`);
                    counter.removeClass('text-warning text-danger').addClass('text-muted');

                    if (remaining < 20) {
                        counter.removeClass('text-muted').addClass('text-warning');
                    }
                    if (remaining < 10) {
                        counter.removeClass('text-warning').addClass('text-danger');
                    }
                }

                element.on('input', updateCounter);
                updateCounter();
            }
        }

        // Add counters to text fields (only in modal)
        addCharacterCounter('#CategoryName', 100);
        addCharacterCounter('#CategoryDesciption', 250);

        // Form validation (scoped to modal)
        $('#categoryModal').on('submit', '#categoryForm', function(e) {
            let isValid = true;
            const modalContext = $('#categoryModal');

            const categoryNameField = modalContext.find('#CategoryName');
            if (!categoryNameField.val().trim()) {
                isValid = false;
                categoryNameField.addClass('is-invalid');
            } else {
                categoryNameField.removeClass('is-invalid');
            }

            const categoryDescField = modalContext.find('#CategoryDesciption');
            if (!categoryDescField.val().trim()) {
                isValid = false;
                categoryDescField.addClass('is-invalid');
            } else {
                categoryDescField.removeClass('is-invalid');
            }

            if (!isValid) {
                e.preventDefault();
                showAlert('warning', 'Please fill in all required fields.');
                return false;
            }
        });
    });
</script>