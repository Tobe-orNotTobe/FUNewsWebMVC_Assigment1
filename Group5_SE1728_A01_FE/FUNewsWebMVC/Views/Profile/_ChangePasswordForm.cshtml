@model ChangePasswordViewModel

@Html.AntiForgeryToken()

<form id="changePasswordForm" asp-action="ChangePassword" method="post">
    <div class="alert alert-success">
        <i class="fas fa-check-circle me-2"></i>
        <strong>Password Security:</strong> Your password will be updated in the database immediately.
        Choose a strong password to protect your account.
    </div>

    <div class="form-group mb-3">
        <label asp-for="CurrentPassword" class="form-label">Current Password *</label>
        <div class="input-group">
            <input asp-for="CurrentPassword" class="form-control" type="password" required
                   placeholder="Enter your current password" />
            <button class="btn btn-outline-secondary" type="button" id="toggleCurrentPassword">
                <i class="fas fa-eye" id="currentPasswordIcon"></i>
            </button>
        </div>
        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="NewPassword" class="form-label">New Password *</label>
        <div class="input-group">
            <input asp-for="NewPassword" class="form-control" type="password" minlength="6" maxlength="70" required
                   placeholder="Enter your new password" />
            <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                <i class="fas fa-eye" id="newPasswordIcon"></i>
            </button>
        </div>
        <span asp-validation-for="NewPassword" class="text-danger"></span>
        <div class="form-text" id="passwordStrengthText">Password must be between 6 and 70 characters</div>

        <!-- Password strength indicator -->
        <div class="progress mt-2" style="height: 5px;">
            <div class="progress-bar" id="passwordStrengthBar" role="progressbar" style="width: 0%"></div>
        </div>
    </div>

    <div class="form-group mb-3">
        <label asp-for="ConfirmPassword" class="form-label">Confirm New Password *</label>
        <div class="input-group">
            <input asp-for="ConfirmPassword" class="form-control" type="password" required
                   placeholder="Re-enter your new password" />
            <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                <i class="fas fa-eye" id="confirmPasswordIcon"></i>
            </button>
        </div>
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        <div class="form-text" id="passwordMatchText"></div>
    </div>

    <div class="alert alert-warning">
        <i class="fas fa-exclamation-triangle me-2"></i>
        <strong>Important:</strong>
        <ul class="mb-0 mt-2">
            <li>Use a combination of letters, numbers, and special characters</li>
            <li>Avoid using personal information in your password</li>
            <li>Don't reuse passwords from other accounts</li>
            <li>Keep your password confidential</li>
        </ul>
    </div>
</form>

<script>
    $(document).ready(function() {
        // Password visibility toggles
        $('#toggleCurrentPassword').click(function() {
            togglePasswordVisibility('#CurrentPassword', '#currentPasswordIcon');
        });

        $('#toggleNewPassword').click(function() {
            togglePasswordVisibility('#NewPassword', '#newPasswordIcon');
        });

        $('#toggleConfirmPassword').click(function() {
            togglePasswordVisibility('#ConfirmPassword', '#confirmPasswordIcon');
        });

        function togglePasswordVisibility(fieldSelector, iconSelector) {
            const field = $(fieldSelector);
            const icon = $(iconSelector);

            if (field.attr('type') === 'password') {
                field.attr('type', 'text');
                icon.removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                field.attr('type', 'password');
                icon.removeClass('fa-eye-slash').addClass('fa-eye');
            }
        }

        // Password strength checker
        $('#NewPassword').on('input', function() {
            const password = $(this).val();
            updatePasswordStrength(password);
            checkPasswordMatch();
        });

        // Password match checker
        $('#ConfirmPassword').on('input', function() {
            checkPasswordMatch();
        });

        function updatePasswordStrength(password) {
            const strengthBar = $('#passwordStrengthBar');
            const strengthText = $('#passwordStrengthText');
            let strength = 0;
            let message = '';
            let colorClass = '';

            if (password.length === 0) {
                message = 'Password must be between 6 and 70 characters';
                colorClass = 'text-muted';
            } else if (password.length < 6) {
                strength = 10;
                message = 'Password too short (minimum 6 characters required)';
                colorClass = 'text-danger';
                strengthBar.removeClass().addClass('progress-bar bg-danger');
            } else {
                // Check password criteria
                if (password.length >= 8) strength += 25;
                if (/[a-z]/.test(password)) strength += 15;
                if (/[A-Z]/.test(password)) strength += 15;
                if (/[0-9]/.test(password)) strength += 15;
                if (/[^A-Za-z0-9]/.test(password)) strength += 20;
                if (password.length >= 12) strength += 10;

                if (strength <= 30) {
                    message = 'Weak password - add more variety';
                    colorClass = 'text-danger';
                    strengthBar.removeClass().addClass('progress-bar bg-danger');
                } else if (strength <= 60) {
                    message = 'Fair password - could be stronger';
                    colorClass = 'text-warning';
                    strengthBar.removeClass().addClass('progress-bar bg-warning');
                } else if (strength <= 80) {
                    message = 'Good password strength';
                    colorClass = 'text-success';
                    strengthBar.removeClass().addClass('progress-bar bg-success');
                } else {
                    message = 'Excellent password strength';
                    colorClass = 'text-success';
                    strengthBar.removeClass().addClass('progress-bar bg-success');
                }
            }

            strengthBar.css('width', Math.min(strength, 100) + '%');
            strengthText.html(message).removeClass().addClass('form-text ' + colorClass);
        }

        function checkPasswordMatch() {
            const newPassword = $('#NewPassword').val();
            const confirmPassword = $('#ConfirmPassword').val();
            const matchText = $('#passwordMatchText');

            if (confirmPassword.length === 0) {
                matchText.html('').removeClass();
                return;
            }

            if (newPassword === confirmPassword) {
                matchText.html('<i class="fas fa-check me-1"></i>Passwords match')
                    .removeClass().addClass('form-text text-success');
            } else {
                matchText.html('<i class="fas fa-times me-1"></i>Passwords do not match')
                    .removeClass().addClass('form-text text-danger');
            }
        }

        // Form validation
        $('#passwordModal').on('submit', '#changePasswordForm', function(e) {
            let isValid = true;
            const modalContext = $('#passwordModal');

            // Clear previous validation states
            modalContext.find('.is-invalid').removeClass('is-invalid');

            // Validate current password
            const currentPassword = modalContext.find('#CurrentPassword');
            if (!currentPassword.val().trim()) {
                isValid = false;
                currentPassword.addClass('is-invalid');
            }

            // Validate new password
            const newPassword = modalContext.find('#NewPassword');
            if (!newPassword.val() || newPassword.val().length < 6 || newPassword.val().length > 70) {
                isValid = false;
                newPassword.addClass('is-invalid');
            }

            // Validate confirm password
            const confirmPassword = modalContext.find('#ConfirmPassword');
            if (!confirmPassword.val() || confirmPassword.val() !== newPassword.val()) {
                isValid = false;
                confirmPassword.addClass('is-invalid');
            }

            // Check if new password is different from current
            if (newPassword.val() === currentPassword.val()) {
                isValid = false;
                newPassword.addClass('is-invalid');
                showAlert('warning', 'New password must be different from current password.');
            }

            if (!isValid) {
                e.preventDefault();
                if (!modalContext.find('.alert-warning').length) {
                    showAlert('warning', 'Please correct the highlighted fields.');
                }
                return false;
            }
        });
    });
</script>